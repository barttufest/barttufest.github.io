{"version":3,"sources":["game.js","person.js","App.js","index.js"],"names":["Game","parent","_this","this","Object","classCallCheck","addPlayer","player","players","push","start","turn","biggestPromille","sort","p","promilles","reverse","allPromilles","map","reduce","l","r","lastValue","drunkMap","amount","Math","floor","random","n","whoseTurn","drink","drinkAmount","console","log","turnTaken","mission","createClass","key","value","react_default","a","createElement","name","onClick","Person","weigth","gender","weight","bloodPrc","input","confiqGender","Number","amountOfBlood","amountOfAlc","times","grams","App","props","possibleConstructorReturn","getPrototypeOf","call","startGame","state","game","setState","stage","turns","startPlayerAddition","assertThisInitialized","confirmPlayer","document","getElementById","window","alert","_this2","intro","className","length","id","type","displayTurn","confiqContent","React","Component","ReactDOM","render","src_App"],"mappings":"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","file":"static/js/main.4204fc6e.chunk.js","sourcesContent":["import React from 'react';\n\nexport class Game {\n  constructor(parent) {\n    this.parent = parent;\n    this.players = [];\n    this.mission = \"JUO!\";\n    this.whoseTurn = null;\n    this.drinkAmount = null;\n  }\n\n  addPlayer = (player) => {\n    this.players.push(player);\n  }\n\n  start = () => {\n    this.turn();\n  }\n\n  turn = () => {\n    const biggestPromille = this.players.sort(p => p.promilles).reverse()[0].promilles;\n\n    const allPromilles = this.players.map(p => biggestPromille / p.promilles).reduce((l, r) => l + r, 0);\n\n    let lastValue = 0;\n    const drunkMap = this.players.map(p => {\n      const amount = (biggestPromille / p.promilles) / allPromilles * 100;\n      lastValue += amount;\n      return [p, lastValue];\n    });\n\n    const r = Math.floor(Math.random() * 101);\n    let n = 0;\n    while (drunkMap[n][1] < r) { n++; }\n\n\n    this.whoseTurn = drunkMap[n][0];\n    const amount = Math.floor(Math.random() * 6);\n    this.whoseTurn.drink(amount);\n    this.drinkAmount = amount;\n    console.log(this.whoseTurn)\n\n    this.parent.turnTaken();\n  }\n\n  displayTurn() {\n    // näytä käskyt\n    return (\n      <div>\n        <div>NYT PELATAAN!</div>\n        <h1>{this.whoseTurn.name} juo {this.drinkAmount} kulausta!</h1>\n        <button onClick={this.turn}>SEURAAVA</button>\n      </div>\n    )\n  }\n}","function confiqGender(input) {\n  switch (input) {\n    case \"MALE\":\n      return 0.08;\n    case \"FEMALE\":\n      return 0.06;\n    case \"OTHER\":\n    default:\n      return 0.07;\n  }\n}\n\nexport class Person {\n  constructor(name, weigth, gender, promilles) {\n    this.name = name;\n    this.weight = weigth;\n    this.bloodPrc = confiqGender(gender);\n    this.promilles = Number(promilles);\n    this.amountOfBlood = this.weight * this.bloodPrc;\n    this.amountOfAlc = this.amountOfBlood * this.promilles / 1000;\n  }\n\n  drink(times) {\n    const grams = (times * 0.079 * 25 * 0.055) / 1000; //kg:s of alcohol\n    this.amountOfAlc += grams;\n    this.amountOfBlood += grams;\n    this.promilles = this.amountOfAlc * 1000 / this.amountOfBlood;\n  }\n}","import React from 'react';\nimport { Game } from './game';\nimport { Person } from './person';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      stage: \"INTRO\",\n      game: null,\n      turns: 0\n    }\n  }\n\n  startGame = () => {\n    this.state.game.start();\n    this.setState({stage: \"GAME\"});\n  }\n\n  turnTaken = () => {\n    this.setState({turns: this.state.turns + 1})\n  }\n\n  startPlayerAddition = () => {\n    this.setState({\n      stage: \"VALIKKO\",\n      game: new Game(this)\n    });\n  }\n\n  addPlayer = () => {\n    this.setState({\n      stage: \"ADD\"\n    })\n  }\n\n  confirmPlayer = () => {\n    const name = document.getElementById(\"name\").value;\n    const weight = document.getElementById(\"weight\").value;\n    const gender = document.getElementById(\"gender\").value;\n    const promilles = document.getElementById(\"drunk\").value;\n    const player = new Person(name, weight, gender, promilles);\n    if (name !== \"\") {\n      this.state.game.addPlayer(player);\n      this.setState({stage: \"VALIKKO\"});\n    } else {\n      window.alert(\"LAITA VITTU NIMI VITU IDIOOTTI\")\n    }\n  }\n\n  render() {\n    const intro = () => {\n      return (\n        <div>\n          <h1>oox gänäs :D</h1>\n          <h3>No kohta oot</h3>\n          <button onClick={this.startPlayerAddition}>ALOITA PELI</button>\n        </div>\n      )\n    }\n\n    const select = () => {\n      return (\n        <div>\n          <div className=\"players\">\n            {this.state.game.players.map(player => {\n              return (\n                <div key={player.name} className=\"player\">{player.name}</div>\n              )\n            })}\n          </div>\n          <button onClick={this.addPlayer}>LISÄÄ PELAAJA</button>\n          {this.state.game.players.length > 0 ? <button onClick={this.startGame}>ALOITA PELI</button> : \"\"}\n        </div>\n      )\n    }\n\n    const add = () => {\n      return (\n        <div>\n          <div>\n            <p>NAME:</p>\n            <input id=\"name\" type=\"text\"></input>\n          </div>\n          <div>\n            <p>GENDER:</p>\n            <select id=\"gender\">\n              <option value=\"MALE\">MALE</option>\n              <option value=\"FEMALE\">FEMALE</option>\n              <option value=\"OTHER\">OTHER</option>\n            </select>\n          </div>\n          <div>\n            <p>WEIGHT:</p>\n            <select id=\"weight\">\n              <option value=\"10\">10</option>\n              <option value=\"20\">20</option>\n              <option value=\"30\">30</option>\n              <option value=\"40\">40</option>\n              <option value=\"50\">50</option>\n              <option value=\"60\">60</option>\n              <option value=\"70\">70</option>\n              <option value=\"80\">80</option>\n              <option value=\"90\">90</option>\n              <option value=\"100\">100</option>\n              <option value=\"110\">110</option>\n              <option value=\"120\">120</option>\n            </select>\n          </div>\n          <div>\n            <p>KUI GÄNÄS?:</p>\n            <select id=\"drunk\">\n              <option value=\"0\">EN YHYTÄÄ</option>\n              <option value=\"0.5\">MELKEE</option>\n              <option value=\"1\">VITU</option>\n            </select>\n          </div>\n          <button onClick={this.confirmPlayer}>ADD PALYER</button>\n        </div>\n      )\n    }\n\n    const game = () => {\n      return (\n        this.state.game.displayTurn()\n      )\n    } \n\n    const confiqContent = () => {\n      switch (this.state.stage) {\n        case \"INTRO\":\n          return intro();\n        case \"VALIKKO\":\n          return select();\n        case \"ADD\":\n          return add();\n        case \"GAME\":\n          return game();\n        default:\n          return intro();   \n      }\n    }\n\n    return (\n      <div className=\"App\">\n        {confiqContent()}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './style.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}